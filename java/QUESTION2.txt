Q2:Enter a Roman Number as input and convert it to an integer. (Example: IX = 9).




import java.util.HashMap;
import java.util.Scanner;

public class RomanToInteger {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter a Roman numeral: ");
        
        // Read Roman numeral input from the user
        String roman = scanner.nextLine().toUpperCase(); // Convert to uppercase for consistency
        
        // Convert the Roman numeral to an integer
        int result = romanToInteger(roman);

        // Print the result
        System.out.println("Roman numeral " + roman + " is equivalent to " + result);
        
        scanner.close(); // Close the scanner when done
    }

    public static int romanToInteger(String s) {
        // Create a dictionary to map Roman numerals to integers
        HashMap<Character, Integer> romanToInt = new HashMap<>();
        romanToInt.put('I', 1);
        romanToInt.put('V', 5);
        romanToInt.put('X', 10);
        romanToInt.put('L', 50);
        romanToInt.put('C', 100);
        romanToInt.put('D', 500);
        romanToInt.put('M', 1000);

        int result = 0;
        for (int i = 0; i < s.length(); i++) {
            char currentChar = s.charAt(i);
            char nextChar = (i + 1 < s.length()) ? s.charAt(i + 1) : '\0';

            // Compare the current Roman numeral to the next one
            if (nextChar != '\0' && romanToInt.get(currentChar) < romanToInt.get(nextChar)) {
                // If the current numeral is smaller than the next one, subtract it
                result -= romanToInt.get(currentChar);
            } else {
                // Otherwise, add it to the result
                result += romanToInt.get(currentChar);
            }
        }

        return result;
    }
}
